<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:cache='http://www.springframework.org/schema/cache'
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

	<context:component-scan base-package="sh.exec"/>
  	<context:property-placeholder location="classpath:*.properties"/>
  	<tx:annotation-driven />
	<aop:aspectj-autoproxy />
	<cache:annotation-driven />

	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="usePool" value="true" />
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="password" value="${redis.password}" />
	</bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory"/>
	</bean>
	
	<bean id='cacheManager' class='org.springframework.data.redis.cache.RedisCacheManager'>
		<constructor-arg ref="redisTemplate"/>
	</bean>

	<bean id="httpClientParams" class="org.apache.commons.httpclient.params.HttpClientParams">
        <property name="connectionManagerClass"
                  value="org.apache.commons.httpclient.MultiThreadedHttpConnectionManager"/>
    </bean>
    
    <bean id="httpClient" class="org.apache.commons.httpclient.HttpClient">
        <constructor-arg ref="httpClientParams"/>
    </bean>
    
    <bean id="httpClientFactory" class="org.springframework.http.client.CommonsClientHttpRequestFactory">
        <constructor-arg ref="httpClient"/>
    </bean>	
	
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<constructor-arg ref="httpClientFactory"/>
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
                    <property name="marshaller" ref="jaxbMarshaller"/>
                    <property name="unmarshaller" ref="jaxbMarshaller"/>
                </bean>
                <bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
            </list>
        </property>
    </bean>
    
	<bean id="jaxbMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="classesToBeBound">
            <list>
                <value>sh.exec.keywordharvester.service.impl.veryrelated.ResultSet</value>
            </list>
        </property>
    </bean>

	<bean class="sh.exec.keywordharvester.service.VeryRelatedLoggingAspect" />
	<bean class="sh.exec.keywordharvester.service.WebKnoxLoggingAspect" />
	
	<bean id="veryRelatedService" class="sh.exec.keywordharvester.service.impl.VeryRelatedServiceImpl" />
	<bean id="webKnoxService" class="sh.exec.keywordharvester.service.impl.WebKnoxServiceImpl" />
	
	<bean id="keywordHarvesterService" class="sh.exec.keywordharvester.service.KeywordHarvesterAdapter">
		<property name="apis">
			<map>
				<entry key="veryrelated" value-ref="veryRelatedService" />
				<entry key="webknox" value-ref="webKnoxService" />
			</map>
		</property>
	</bean>
	
	<task:annotation-driven executor="taskExecutor" scheduler="taskScheduler"/>
	<task:executor id="taskExecutor" pool-size="10"/>
	<task:scheduler id="taskScheduler" pool-size="5"/>
</beans>
